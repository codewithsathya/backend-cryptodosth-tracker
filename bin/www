#!/usr/bin/env node

const app = require("../app");
const debug = require('debug')('cryptodosth');
const http = require("http");

const port = normalizePort(process.env.PORT || 3000);
app.set("port", port);

const server = http.createServer(app);

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(value) {
  let port = parseInt(value, 10);
  if (isNaN(port)) {
    return value;
  }

  if (port >= 0) {
    return port;
  }
  return false;
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }
  let bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  if (error.code === "EACCES") {
    console.error(bind + " requires elevated privileges");
    process.exit(1);
  } else if (error.code === "EADDRINUSE") {
    console.error(bind + " is already in use");
    process.exit(1);
  } else {
    throw error;
  }
}

function onListening(){
	let addr = server.address();
	let bind = typeof addr.port === 'string' ? 'pipe ' + addr.port : 'port ' + addr.port;
	debug("Listening on " + bind);
}
